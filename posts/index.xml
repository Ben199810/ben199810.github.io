<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Bing-wei's Blog</title><link>https://ben199810.github.io/posts/</link><description>Recent content in Posts on Bing-wei's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><copyright>© 2025</copyright><lastBuildDate>Sun, 24 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://ben199810.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>minikube 安裝 for M系列晶片 Mac</title><link>https://ben199810.github.io/posts/minikube/install/apple/</link><pubDate>Sun, 24 Sep 2023 00:00:00 +0000</pubDate><guid>https://ben199810.github.io/posts/minikube/install/apple/</guid><description>前言 # 最近趁著 BTS 學生教育方案入手了 macbook pro m2 版本，因此也想要在上面安裝 minikube 來練習 k8s 的操作。但在安裝的過程中，發現了一些問題，因此紀錄一下。
問題 # 在安裝的過程中，發現目前 vitrualbox 還不支援 m1 與 m2 版本的 mac。所以找了其他的虛擬機軟體
其中也有使用 hyperkit 來安裝的方式。但也是不行。
解決方案 # 後來找到 Qemu 這個虛擬機軟體，這邊簡單介紹。</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://ben199810.github.io/posts/minikube/install/apple/featured.png"/></item><item><title>GitLab CICD</title><link>https://ben199810.github.io/posts/gitlab/cicd/</link><pubDate>Fri, 22 Sep 2023 00:00:00 +0000</pubDate><guid>https://ben199810.github.io/posts/gitlab/cicd/</guid><description>前言 # 最近因為公司有在進行 GitLab 轉移，所以要重新建構 CICD，提供比較好維護的 CI modules，讓所有的組能夠通用，達到流程簡化的目的。有開始用一些比較進階的 CICD 寫法所以透過寫筆記，提升自己的印象。
概念 # 使用 gitlab-ci 建立的自動化流程，稱作 pipeline 中文意思是流水線。就像設定好一個生產線一樣十分有趣。 這邊已經知道了 pipeline，那由誰執行 pipeline 的流程呢？答案是 gitlab runner。當有 pipeline 觸發且需要執行時，會有 job 產生，這些 job 就會分配給 runner 去執行囉！ 基礎 CICD # 了解概念之後，就可以開始寫自己的 CICD 了！那一般的 CICD 流程是什麼呢？一般來說會有以下基本元素：</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://ben199810.github.io/posts/gitlab/cicd/featured.png"/></item><item><title>Dockerfile</title><link>https://ben199810.github.io/posts/docker/dockerfile/</link><pubDate>Sun, 27 Aug 2023 00:00:00 +0000</pubDate><guid>https://ben199810.github.io/posts/docker/dockerfile/</guid><description>前言 # docker 是將 image 俗稱映像或者鏡像檔，建立容器的模擬使用環境的技術。那要如何建立 image 呢？
接著介紹本篇文章的重點 Dockerfile
Dockerfile # Dockfile 是一個建構 image 的腳本，基於你選擇的基底映像，開始安裝在開發環境所需要的依賴以及套件等等&amp;hellip;
建立 image 也可以保證每個開發者在進行開發時使用的環境都相同，不會導致將程式碼推上去版控，經過打包發布才發現有相容性的問題。有效的消除了在協同開發時會遇到的衝突呢～
下面提供簡單的 dockerfile 範例。下面的範例步驟使用引用 alpine image 當做基底，並且安裝 curl 套件。以 image 啟動 container 時，會執行 /bin/bash。 :point_right: docker run -it [image] /bin/bash</description></item><item><title>Ingress Controller 簡介</title><link>https://ben199810.github.io/posts/k8s/ingress-controller/</link><pubDate>Sat, 19 Aug 2023 00:00:00 +0000</pubDate><guid>https://ben199810.github.io/posts/k8s/ingress-controller/</guid><description>前言 # 隨著系統架構可能日益龐大，可能會使用複數的 ingress 來做進入服務的區分。以防止在 ingress 異常的時候，會影響全體的服務使用。缺點是複數的 ingress 需要使用靜態 IP。在 GCP 的服務上，每保留一組靜態 IP 服務就是增加成本。接著會介紹 ingress controller 這項服務用於管理所有的 ingress。
上一篇文章中有提到 ingress，如果想瞭解 ingress 可以先參考或預習這篇文章。 Ingress 6 August 2023&amp;middot;1 分鐘&amp;middot; loading &amp;middot; loading k8s ingress Nginx Ingress Controller # 這篇文章要講解的 Nginx Ingress Controller 結合了 Ingress 的簡潔並支援 Nginx 相關的擴充功能，讓我們能更好的管理所有的 ingress，下面會簡單提到 nginx 以及 ingress 優點。</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://ben199810.github.io/posts/k8s/ingress-controller/featured.png"/></item><item><title>Ingress</title><link>https://ben199810.github.io/posts/k8s/ingress/</link><pubDate>Sun, 06 Aug 2023 00:00:00 +0000</pubDate><guid>https://ben199810.github.io/posts/k8s/ingress/</guid><description>介紹 ingress # ingress 是 k8s 給 service 提供外部訪問的 URL、SSL、路由等功能。 可以理解為 nginx 或 traefik 等的代理工具。允許透過某個 URL 進入對應的 service，且碰到某些 route 能夠 proxy pass 到其他 service。
:star: ingress 又分成外部負載平衡、內部負載平衡。兩者在使用設定上有一些小小的不同。
外部負載平衡 # 通常對外部的負載平衡入口，都會設置防火牆或是白名單管理但是 k8s ingress 卻不能直接實現。需要透過一些 gcp 元件功能，來設置防火牆或白名單管理。</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://ben199810.github.io/posts/k8s/ingress/featured.png"/></item><item><title>Docker 指令</title><link>https://ben199810.github.io/posts/docker/command/</link><pubDate>Sun, 30 Jul 2023 00:00:00 +0000</pubDate><guid>https://ben199810.github.io/posts/docker/command/</guid><description>匯出/入映像檔 # :star: export 可以匯出 container 已變更的設定
:star: save 單純匯出 image
:star: 這裡要注意 export 對應 import ; save 對應 load
docker export [image] &amp;gt; [filename].tar docker import &amp;lt; [filname].tar docker save [image]:[tag] &amp;gt; [filname].</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://ben199810.github.io/posts/docker/command/featured.png"/></item></channel></rss>